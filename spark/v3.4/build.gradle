String sparkVersion = '3.4.2'
String sparkMajorVersion = '3.4'
String scalaVersion = System.getProperty("scalaVersion") != null ? System.getProperty("scalaVersion") : System.getProperty("defaultScalaVersion")

def sparkProjects = [
    project(":lightning-spark:lightning-spark-extensions-${sparkMajorVersion}_${scalaVersion}"),
    project(":lightning-spark:lightning-spark-runtime-${sparkMajorVersion}_${scalaVersion}"),
]

configure(sparkProjects) {
  configurations {
    all {
      resolutionStrategy {
        force 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
      }
    }
  }
}

project(":lightning-spark:lightning-spark-extensions-${sparkMajorVersion}_${scalaVersion}") {
  apply plugin: 'java-library'
  apply plugin: 'scala'

  dependencies {
    implementation project(":lightning-spark:lightning-spark-common_${scalaVersion}")

    implementation("org.scala-lang.modules:scala-collection-compat_${scalaVersion}")

    compileOnly "org.scala-lang:scala-library:${scalaVersion}"
    compileOnly("org.apache.spark:spark-hive_${scalaVersion}:${sparkVersion}")

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.scalatest:scalatest_${scalaVersion}:3.2.15"
    testImplementation "org.scalatest:scalatest-matchers-core_${scalaVersion}:3.2.15"
    testImplementation "org.scalatestplus:junit-4-13_${scalaVersion}:3.2.2.0"

    testImplementation "org.apache.avro:avro"
    testImplementation "org.apache.orc:orc-core"
    testImplementation "org.apache.parquet:parquet-hadoop"
    testImplementation "com.h2database:h2:2.1.214"
    testImplementation "net.snowflake:snowflake-jdbc:3.14.4"
    testImplementation "com.amazon.redshift:redshift-jdbc42:2.1.0.25"

    implementation ("org.apache.iceberg:iceberg-spark-${sparkMajorVersion}_${scalaVersion}:1.4.3")
    implementation ("org.apache.iceberg:iceberg-spark-extensions-${sparkMajorVersion}_${scalaVersion}:1.4.3")
    implementation ("io.delta:delta-core_${scalaVersion}:2.4.0")
    implementation ("org.apache.spark:spark-avro_${scalaVersion}:${sparkVersion}")
    implementation("com.databricks:spark-xml_${scalaVersion}:0.17.0")
  }
}

project(":lightning-spark:lightning-spark-runtime-${sparkMajorVersion}_${scalaVersion}") {
  apply plugin: 'java-library-distribution'

  tasks.jar

  sourceSets {
    integration {
      java.srcDir "$projectDir/src/integration/java"
      resources.srcDir "$projectDir/src/integration/resources"
    }
  }

  configurations {
    implementation {
      exclude group: 'org.apache.spark'

      // included in Spark
      exclude group: 'org.slf4j'
      exclude group: 'org.apache.commons'
      exclude group: 'commons-pool'
      exclude group: 'commons-codec'
      exclude group: 'org.xerial.snappy'
      exclude group: 'javax.xml.bind'
      exclude group: 'javax.annotation'
      exclude group: 'com.github.luben'
      exclude group: 'com.ibm.icu'
      exclude group: 'org.glassfish'
      exclude group: 'org.abego.treelayout'
      exclude group: 'org.antlr'
      exclude group: 'org.scala-lang'
      exclude group: 'org.scala-lang.modules'
      exclude group: 'com.fasterxml.jackson.core'
    }
  }

  dependencies {
    implementation project(":lightning-spark:lightning-spark-extensions-${sparkMajorVersion}_${scalaVersion}")
    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.3'

    integrationImplementation "org.scala-lang.modules:scala-collection-compat_${scalaVersion}"
    integrationImplementation "org.apache.spark:spark-hive_${scalaVersion}:${sparkVersion}"
    integrationImplementation 'org.junit.vintage:junit-vintage-engine'
    integrationImplementation 'org.slf4j:slf4j-simple'
    integrationImplementation project(path: ":lightning-spark:lightning-spark-extensions-${sparkMajorVersion}_${scalaVersion}", configuration: 'testArtifacts')
    // Not allowed on our classpath, only the runtime jar is allowed
    integrationCompileOnly project(":lightning-spark:lightning-spark-extensions-${sparkMajorVersion}_${scalaVersion}")

    implementation ("org.apache.hadoop:hadoop-aws:3.3.6") {
      exclude group: 'io.netty'
    }
    implementation ("com.amazonaws:aws-java-sdk-bundle:1.12.429") {
      exclude group: 'com.fasterxml.jackson.core'
      exclude group: 'io.netty'
    }

    implementation ("org.apache.hadoop:hadoop-azure:3.3.6") {
      exclude group: 'com.fasterxml.jackson.core'
    }

    implementation ("com.azure:azure-storage-blob:12.24.0") {
      exclude group: 'com.fasterxml.jackson.core'
      exclude group: 'io.netty'
    }

  }

  task integrationTest(type: Test) {
    description = "Test Spark3 Runtime Jar against Spark ${sparkMajorVersion}"
    group = "verification"
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
  }

  check.dependsOn integrationTest

  jar {
    enabled = false
  }

  distributions {
    main {
      distributionBaseName = "lightning-metastore-${sparkMajorVersion}_${scalaVersion}"
      contents {
        from 'LICENSE'
        from 'NOTICE'
      }
    }
  }
}

